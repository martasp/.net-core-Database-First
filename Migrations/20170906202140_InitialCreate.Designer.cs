// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using mvctest.Models;
using System;

namespace mvctest.Migrations
{
    [DbContext(typeof(TestStudContext))]
    [Migration("20170906202140_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("mvctest.Models.Atsiskaitymas", b =>
                {
                    b.Property<int>("IdAtsiskaitymas")
                        .HasColumnName("id_Atsiskaitymas");

                    b.Property<int>("FkStudentasidStudentas")
                        .HasColumnName("fk_Studentasid_Studentas");

                    b.Property<string>("Pavadinimas")
                        .HasColumnName("pavadinimas")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("Pazymys")
                        .HasColumnName("pazymys");

                    b.HasKey("IdAtsiskaitymas");

                    b.HasIndex("FkStudentasidStudentas");

                    b.ToTable("Atsiskaitymas");
                });

            modelBuilder.Entity("mvctest.Models.Destytojas", b =>
                {
                    b.Property<int>("IdDestytojas")
                        .HasColumnName("id_Destytojas");

                    b.Property<DateTime?>("Metai")
                        .HasColumnName("metai")
                        .HasColumnType("date");

                    b.Property<string>("Pavarde")
                        .HasColumnName("pavarde")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Vardas")
                        .HasColumnName("vardas")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("IdDestytojas");

                    b.ToTable("Destytojas");
                });

            modelBuilder.Entity("mvctest.Models.Modulis", b =>
                {
                    b.Property<string>("Kodas")
                        .HasColumnName("kodas")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int>("FkStudentasidStudentas")
                        .HasColumnName("fk_Studentasid_Studentas");

                    b.Property<int>("FkStudentasidStudentas1")
                        .HasColumnName("fk_Studentasid_Studentas1");

                    b.Property<string>("Pavadinimas")
                        .HasColumnName("pavadinimas")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Kodas");

                    b.HasIndex("FkStudentasidStudentas");

                    b.HasIndex("FkStudentasidStudentas1");

                    b.ToTable("Modulis");
                });

            modelBuilder.Entity("mvctest.Models.Studentas", b =>
                {
                    b.Property<int>("IdStudentas")
                        .HasColumnName("id_Studentas");

                    b.Property<int>("FkDestytojasidDestytojas")
                        .HasColumnName("fk_Destytojasid_Destytojas");

                    b.Property<DateTime?>("Metai")
                        .HasColumnName("metai")
                        .HasColumnType("date");

                    b.Property<string>("Pavarde")
                        .HasColumnName("pavarde")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Universitetas")
                        .HasColumnName("universitetas")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Vardas")
                        .HasColumnName("vardas")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("IdStudentas");

                    b.HasIndex("FkDestytojasidDestytojas");

                    b.ToTable("Studentas");
                });

            modelBuilder.Entity("mvctest.Models.Atsiskaitymas", b =>
                {
                    b.HasOne("mvctest.Models.Studentas", "FkStudentasidStudentasNavigation")
                        .WithMany("Atsiskaitymas")
                        .HasForeignKey("FkStudentasidStudentas")
                        .HasConstraintName("atsiskaito");
                });

            modelBuilder.Entity("mvctest.Models.Modulis", b =>
                {
                    b.HasOne("mvctest.Models.Studentas", "FkStudentasidStudentasNavigation")
                        .WithMany("ModulisFkStudentasidStudentasNavigation")
                        .HasForeignKey("FkStudentasidStudentas")
                        .HasConstraintName("turi");

                    b.HasOne("mvctest.Models.Studentas", "FkStudentasidStudentas1Navigation")
                        .WithMany("ModulisFkStudentasidStudentas1Navigation")
                        .HasForeignKey("FkStudentasidStudentas1")
                        .HasConstraintName("FK__Modulis__fk_Stud__2D27B809");
                });

            modelBuilder.Entity("mvctest.Models.Studentas", b =>
                {
                    b.HasOne("mvctest.Models.Destytojas", "FkDestytojasidDestytojasNavigation")
                        .WithMany("Studentas")
                        .HasForeignKey("FkDestytojasidDestytojas")
                        .HasConstraintName("moko");
                });
#pragma warning restore 612, 618
        }
    }
}
